import React, { Component } from 'react';
import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';
//import axios from 'axios';

const mapStyles = {
    width: '100%',
    height: '825px'
};

let geocoder;

class MapContainer extends Component {
    constructor (props) {
        super(props);
        this.onMarkerClick = this.onMarkerClick.bind(this);
        this.displayMarkers = this.displayMarkers.bind(this);
        this.state = {
            lat: 34.052235,
            lng: -118.243683,
            showingInfoWindow: false,
            activeMarker: {},
            selectedPlace: {},
            addressList: [],
            truck_name: [],
            url: [],
            //add by joey
            coordinates: [],
            food_type: [],
            rating: [],
            price_range: []
        }
    }

    componentDidMount () {
		this.getTruckName();
		this.getURL();
		this.getAddress();
        this.getCoordinates();
        this.getTruckDetails();
    }

    getTruckDetails = () => {
        fetch('/api/truck_details')
            .then(res => res.json())
            .then(res => {
                var food_type = res.map(r => r.food_type);
                var rating = res.map(r => r.rating);
                var price_range = res.map(r => r.price_range);
                this.setState({food_type});
                this.setState({rating});
                this.setState({price_range});
            });
    };

	getTruckName = () => {
        fetch('/api/truck_name')
            .then(res => res.json())
            .then(res => {
                var truck_name = res.map(r => r.truck_name);
                this.setState({truck_name});
            });
    };

    getURL = () => {
        fetch('/api/url')
            .then(res => res.json())
            .then(res => {
                var url = res.map(r => r.url);
                this.setState({url});
            });
    };

    //added by joey
    getCoordinates = () => {
        fetch('/api/coordinates')
            .then(res => res.json())
            .then(res => {
                var coordinates = res.map(r => r.coordinates);
                this.setState({coordinates});
            });
    };

    //added by joey
    getAddress = () => {
        fetch('/api/address')
            .then(res => res.json())
            .then(res => {
                var addressList = res.map(r => r.address);
                this.setState({addressList});
            });
    };

    displayMarkers () {
        return this.state.coordinates.map((coordinates, index) => {
            return <Marker key={index} id={index} position={{
                lat: coordinates.x,
                lng: coordinates.y
            }}
                           onClick={this.onMarkerClick}
                            name={this.state.truck_name[index]}
                            name1={this.state.addressList[index]}
                            name3={<a href={this.state.url[index]} target="_blank">Yelp</a>}
             />
        })
    }

    onMarkerClick (props, marker, e) {
        this.setState({
            selectedPlace: props,
            activeMarker: marker,
            showingInfoWindow: true
        });
    };

    onClose = props => {
        if(this.state.showingInfoWindow){
            this.setState({
                showingInfoWindow: false,
                activeMarker: null
            });
        }
    };

    createSideNav = () => {
        let side = [];
        for(let i = 0; i < this.state.truck_name.length; i++){
            let trucks = [];
            trucks.push(<b2>{i + 1}) {this.state.truck_name[i]}</b2>);
            trucks.push(<p><small>{this.state.food_type[i]} <br /> {this.state.rating[i]} {this.state.price_range[i]}</small></p>);
            side.push(<b2>{trucks}</b2>);
        }
        return side;
    };

    render() {

        geocoder = new this.props.google.maps.Geocoder();

        return (
            <div id="parent">

            <div class="sidenav">
                {this.createSideNav()}
            </div>
            <div class="main">
            </div>

            <div className="map-row">
                <div className="column-map">
                        <Map
                            google={this.props.google}
                            zoom={10}
                            style={mapStyles}
                            initialCenter={{
                                lat: this.state.lat,
                                lng: this.state.lng
                            }}
                        >
                            {this.displayMarkers(this.state.coordinates)}
                            <InfoWindow
                                marker={this.state.activeMarker}
                                visible={this.state.showingInfoWindow}
                                onClose={this.onClose}
                            >
                                <div>{this.state.selectedPlace.name} <br /> {this.state.selectedPlace.name1}
                                	<br /> {this.state.selectedPlace.name3} </div>

                            </InfoWindow>
                        </Map>
                </div>
            </div>
            </div>
        );
    }
}

export default GoogleApiWrapper({
    apiKey: 'AIzaSyBTyNrlporN5pCSZKan4GgSr61wEsEY1GQ'
})(MapContainer);